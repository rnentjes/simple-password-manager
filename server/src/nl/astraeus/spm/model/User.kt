package nl.astraeus.spm.model

import nl.astraeus.database.SimpleDao
import nl.astraeus.database.annotations.*
import java.nio.charset.Charset
import java.util.*

/**
 * User: rnentjes
 * Date: 20-11-16
 * Time: 12:54
 */

var utf8 = Charset.forName("UTF-8")

@Table(name = "usrs")
@Cache(maxSize = 5000)
data class User(
  @Id(IdType.AUTOGENERATED) var id: Long = 0,
  var password: String,
  var encryptedKey: String,
  @Index var name: String,
  var created: Date,
  var updated: Date,
  @Blob var data: ByteArray = ByteArray(0)
) {
    constructor(name: String, password: String, encryptedKey: String): this(0, password, encryptedKey, name, Date(), Date())

    constructor(): this(0, "", "", "", Date(), Date())

    fun setData(data: String) {
        this.data = data.toByteArray(utf8)
    }

    fun getData()= String(data, utf8)

    fun checkPassword(password: String) = (password == this.password)
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as User

        if (id != other.id) return false

        return true
    }

    override fun hashCode(): Int {
        return id.hashCode()
    }

}

object UserDao: SimpleDao<User>(User::class.java) {

    fun findByName(name: String) = find("name = ?", name)

}
